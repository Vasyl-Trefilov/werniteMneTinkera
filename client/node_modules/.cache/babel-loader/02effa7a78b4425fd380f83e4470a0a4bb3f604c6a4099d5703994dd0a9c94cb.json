{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drenf\\\\WebstormProjects\\\\teemtasker\\\\client\\\\src\\\\Page\\\\CreateOrder.js\";\nimport React from 'react';\nimport { Container, Dropdown, DropdownMenu, DropdownToggle, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateOrder = () => {\n  const types = [{\n    id: 1,\n    name: \"type num 1\"\n  }, {\n    id: 2,\n    name: \"type num 2\"\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    style: {\n      width: 600\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n        children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n          children: \"Chose type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n          children: types.map(type => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: type.name\n          }, type.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        className: \"mt-3\",\n        placeholder: \"Enter name of order...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        className: \"mt-3\",\n        placeholder: \"Enter little description of order...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        className: \"mt-3\",\n        placeholder: \"Enter full description of order...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = CreateOrder;\nexport default CreateOrder;\nvar _c;\n$RefreshReg$(_c, \"CreateOrder\");","map":{"version":3,"names":["React","Container","Dropdown","DropdownMenu","DropdownToggle","Form","jsxDEV","_jsxDEV","CreateOrder","types","id","name","className","style","width","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","Item","Control","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/drenf/WebstormProjects/teemtasker/client/src/Page/CreateOrder.js"],"sourcesContent":["import React from 'react';\r\nimport {Container, Dropdown, DropdownMenu, DropdownToggle, Form} from \"react-bootstrap\";\r\n\r\nconst CreateOrder = () => {\r\n    const types = [\r\n        {id: 1, name: \"type num 1\"},\r\n        {id: 2, name: \"type num 2\"},\r\n    ]\r\n    return (\r\n        <Container className=\"mt-5\" style={{width:600}}>\r\n            <Form>\r\n                <Dropdown>\r\n                    <DropdownToggle>Chose type</DropdownToggle>\r\n                    <DropdownMenu>{types.map(type => (\r\n                        <Dropdown.Item key={type.id}>{type.name}</Dropdown.Item>\r\n                    ))}</DropdownMenu>\r\n                </Dropdown>\r\n                <Form.Control className={\"mt-3\"} placeholder={\"Enter name of order...\"}/>\r\n                <Form.Control className={\"mt-3\"} placeholder={\"Enter little description of order...\"}/>\r\n                <Form.Control className={\"mt-3\"} placeholder={\"Enter full description of order...\"}/>\r\n            </Form>\r\n        </ Container>\r\n    )\r\n};\r\n\r\nexport default CreateOrder;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,cAAc,EAAEC,IAAI,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExF,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACtB,MAAMC,KAAK,GAAG,CACV;IAACC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAY,CAAC,EAC3B;IAACD,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAY,CAAC,CAC9B;EACD,oBACIJ,OAAA,CAACN,SAAS;IAACW,SAAS,EAAC,MAAM;IAACC,KAAK,EAAE;MAACC,KAAK,EAAC;IAAG,CAAE;IAAAC,QAAA,eAC3CR,OAAA,CAACF,IAAI;MAAAU,QAAA,gBACDR,OAAA,CAACL,QAAQ;QAAAa,QAAA,gBACLR,OAAA,CAACH,cAAc;UAAAW,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CAAC,eAC3CZ,OAAA,CAACJ,YAAY;UAAAY,QAAA,EAAEN,KAAK,CAACW,GAAG,CAACC,IAAI,iBACzBd,OAAA,CAACL,QAAQ,CAACoB,IAAI;YAAAP,QAAA,EAAgBM,IAAI,CAACV;UAAI,GAAnBU,IAAI,CAACX,EAAE;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA4B,CAC1D;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACXZ,OAAA,CAACF,IAAI,CAACkB,OAAO;QAACX,SAAS,EAAE,MAAO;QAACY,WAAW,EAAE;MAAyB;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACzEZ,OAAA,CAACF,IAAI,CAACkB,OAAO;QAACX,SAAS,EAAE,MAAO;QAACY,WAAW,EAAE;MAAuC;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACvFZ,OAAA,CAACF,IAAI,CAACkB,OAAO;QAACX,SAAS,EAAE,MAAO;QAACY,WAAW,EAAE;MAAqC;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAErB,CAAC;AAACM,EAAA,GApBIjB,WAAW;AAsBjB,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}